(function () {
    (function (c, a, b) {
        L.VectorMarkers = {};
        L.VectorMarkers.version = "1.0.0";
        L.VectorMarkers.MAP_PIN = "M16,1 C7.7146,1 1,7.65636364 1,15.8648485 C1,24.0760606 16,51 16,51 C16,51 31,24.0760606 31,15.8648485 C31,7.65636364 24.2815,1 16,1 L16,1 Z";
        L.VectorMarkers.Icon = L.Icon.extend({
            options: {
                iconSize: [30, 50],
                iconAnchor: [15, 50],
                popupAnchor: [2, -40],
                shadowAnchor: [7, 45],
                shadowSize: [54, 51],
                className: "vector-marker",
                prefix: "fa",
                spinClass: "fa-spin",
                extraClasses: "",
                icon: "home",
                markerColor: "blue",
                iconColor: "white"
            }, initialize: function (d) {
                return d = L.Util.setOptions(this, d)
            }, createIcon: function (f) {
                var h, e, d, g;
                h = (f && f.tagName === "DIV" ? f : a.createElement("div"));
                d = this.options;
                if (d.icon) {
                    e = this._createInner()
                }
                g = L.VectorMarkers.MAP_PIN;
                h.innerHTML = '<svg width="32px" height="52px" viewBox="0 0 32 52" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><path d="' + g + '" fill="' + d.markerColor + '"></path></svg>' + e;
                this._setIconStyles(h, "icon");
                this._setIconStyles(h, "icon-" + d.markerColor);
                return h
            }, _createInner: function () {
                var d, h, g, f, e;
                d = void 0;
                f = "";
                h = "";
                g = "";
                e = this.options;
                if (e.prefix === "" || e.icon.slice(0, e.prefix.length + 1) === e.prefix + "-") {
                    d = e.icon
                } else {
                    d = e.prefix + "-" + e.icon
                }
                if (e.spin && typeof e.spinClass === "string") {
                    f = e.spinClass
                }
                if (e.iconColor) {
                    if (e.iconColor === "white" || e.iconColor === "black") {
                        h = "icon-" + e.iconColor
                    } else {
                        g = "style='color: " + e.iconColor + "' "
                    }
                }
                return "<i " + g + "class='" + e.extraClasses + " " + e.prefix + " " + d + " " + f + " " + h + "'></i>"
            }, _setIconStyles: function (d, g) {
                var f, e, h;
                e = this.options;
                h = L.point(e[(g === "shadow" ? "shadowSize" : "iconSize")]);
                f = void 0;
                if (g === "shadow") {
                    f = L.point(e.shadowAnchor || e.iconAnchor)
                } else {
                    f = L.point(e.iconAnchor)
                }
                if (!f && h) {
                    f = h.divideBy(2, true)
                }
                d.className = "vector-marker-" + g + " " + e.className;
                if (f) {
                    d.style.marginLeft = (-f.x) + "px";
                    d.style.marginTop = (-f.y) + "px"
                }
                if (h) {
                    d.style.width = h.x + "px";
                    return d.style.height = h.y + "px"
                }
            }
        });
        return L.VectorMarkers.icon = function (d) {
            return new L.VectorMarkers.Icon(d)
        }
    })(this, document)
}).call(this);